/*
 * style.css
 * スマートフォン向けカメラアプリのスタイルシート
 */

/* ==================== 汎用スタイル ==================== */
body {
    margin: 0;
    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    display: flex; /* flexboxで中央寄せ */
    justify-content: center;
    align-items: center;
    min-height: 100vh; /* 画面高さいっぱい */
    background-color: #f0f2f5; /* 背景色 */
    overflow: hidden; /* スクロールバーが出ないように */
}

/* モーダル表示時にbodyのスクロールを無効にするユーティリティクラス */
.modal-open {
    overflow: hidden;
}

/* 要素の表示/非表示を切り替えるユーティリティクラス */
.hidden {
    display: none !important;
}

/* ==================== コンテナレイアウト ==================== */
.container {
    position: relative; /* 子要素の絶対配置の基準 */
    width: 100%; /* 画面幅いっぱいに */
    max-width: 600px; /* PCなど大画面での最大幅 */
    height: 100vh; /* 画面高さいっぱい */
    display: block; /* ブロック要素として振る舞う */
    background-color: #fff;
    box-shadow: 0 4px 10px rgba(0,0,0,0.1); /* 軽い影 */
    overflow: hidden; /* 子要素がはみ出さないように */
}

/* ==================== カメラ映像とキャンバス ==================== */
#cameraFeed {
    display: block;
    position: absolute; /* containerに対して絶対配置 */
    top: 0;
    left: 0;
    width: 100%; /* 親要素(container)に合わせる */
    height: 100%; /* 親要素(container)に合わせる */
    object-fit: cover; /* 縦横比を維持しつつ、要素を完全に覆う */
    z-index: 1; /* ボタンより奥 */
}

#photoCanvas {
    position: absolute; /* containerに対して絶対配置 */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    z-index: 2; /* カメラ映像より手前、ボタンより奥 */
    background-color: black; /* 念のため背景色を指定、白くなる問題を特定しやすく */
}

/* ==================== 制御ボタン (シャッター、保存、再撮影) ==================== */
.control-button {
    position: absolute;
    /* bottom: calc(15vh + env(safe-area-inset-bottom, 30px)); としても良いですが、
       今回のコードはenv()のフォールバック値が0pxなので、そのままにしています。
       必要であれば、安全のためにフォールバック値を変更してください。 */
    bottom: calc(15vh + env(safe-area-inset-bottom, 0px)); /* 画面下部から15vh + セーフエリアの余白 */
    background-color: rgba(255, 255, 255, 0.8); /* 半透明の白背景 */
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    transition: background-color 0.2s ease, transform 0.1s ease; /* ホバー/クリックアニメーション */
    z-index: 10; /* 最前面に表示 */
}

.control-button:active {
    transform: scale(0.95); /* クリック時の縮小アニメーション */
}

/* シャッターボタンの専用スタイル */
#shutterButton {
    width: 70px;
    height: 70px;
    border-radius: 50%; /* 丸い形 */
    left: 50%; /* 中央に配置 */
    transform: translateX(-50%); /* 中央配置のための調整 */
}

/* シャッターボタンの内側の赤い円 */
.icon-circle {
    display: block;
    width: 50px;
    height: 50px;
    border: 3px solid #ff0000; /* 内側の赤い円 */
    border-radius: 50%;
    background-color: white;
}

/* 保存ボタンの専用スタイル */
#saveButton {
    width: 90px;
    height: 40px;
    border-radius: 20px; /* 角丸のボタン */
    background-color: #28a745; /* 緑色 */
    color: white;
    font-size: 1em;
    left: calc(50% - 55px); /* 中央より少し左に配置 */
    transform: translateX(-50%); /* 中央配置のための調整 */
}

#saveButton:hover {
    background-color: #218838;
}

/* 再撮影ボタンの専用スタイル */
#retakeButton {
    width: 90px;
    height: 40px;
    border-radius: 20px; /* 角丸のボタン */
    background-color: #007bff; /* 青色 */
    color: white;
    font-size: 1em;
    left: calc(50% + 55px); /* 中央より少し右に配置 */
    transform: translateX(-50%); /* 中央配置のための調整 */
}

#retakeButton:hover {
    background-color: #0056b3;
}

/* ==================== バージョン情報 ==================== */
#versionInfo {
    position: fixed; /* 画面に固定 */
    top: 10px;       /* 上から10px */
    left: 10px;      /* 左から10px */
    z-index: 1001;   /* モーダルやボタンより手前に表示 */
    background-color: rgba(0, 0, 0, 0.5); /* 半透明の黒背景 */
    color: white;    /* 白い文字 */
    padding: 3px 8px; /* 内側の余白 */
    border-radius: 5px; /* 角を丸くする */
    font-size: 0.7em; /* 小さめの文字サイズ */
    pointer-events: none; /* マウスイベントを透過させ、下の要素をクリックできるようにする */
}

/* ==================== モーダルウィンドウ ==================== */
.modal {
    display: none; /* 初期状態では非表示 */
    position: fixed; /* 画面に固定 */
    z-index: 1000; /* 他の要素より手前に表示 */
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.6); /* 半透明の背景 */
    display: flex; /* flexboxで中央寄せ */
    justify-content: center;
    align-items: center;
}

.modal-content {
    background-color: #fff;
    padding: 30px;
    border-radius: 10px;
    text-align: center;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    max-width: 80%;
    animation: fadeIn 0.3s ease-out; /* フェードインアニメーション */
}

.modal-content p {
    margin-bottom: 20px;
    font-size: 1.1em;
    color: #333;
}

.modal-content button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 10px 25px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1em;
    transition: background-color 0.2s ease;
}

.modal-content button:hover {
    background-color: #0056b3;
}

/* フェードインアニメーション */
@keyframes fadeIn {
    from { opacity: 0; transform: translateY(-20px); }
    to { opacity: 1; transform: translateY(0); }
}

/* 追記：フレーム画像のベース */
#frameTop, #frameBottom {
  position: absolute;
  left: 0;
  width: 100%;
  object-fit: fill;       /* 横方向の伸縮のみを許容（縦はJSで固定） */
  z-index: 6;             /* video(1) / photoCanvas(2) より前、ボタン(10)より後でもOKなら調整可 */
  pointer-events: none;   /* タップ操作の邪魔をしない */
}

/* 上フレームは上端固定、下フレームは下端固定 */
#frameTop    { top: 0; }
#frameBottom { bottom: 0; }
